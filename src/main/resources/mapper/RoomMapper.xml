<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.start01.dao.RoomDao">

    <select id="RoomAll" resultType="RoomDto">
        SELECT * FROM room
    </select>

    <select id="RoomSelectRecruit" resultType="RoomDto">
        SELECT * FROM room WHERE status = '모집중'
    </select>

    <select id="SelectById" parameterType="int" resultType="RoomDto">
        SELECT * FROM room WHERE store_id=#{storeId} AND status = '모집중'
    </select>

    <select id="RoomsWithJoinCount" resultType="RoomDto">
        SELECT
        r.id, r.store_id, r.room_name, r.room_address, r.max_people,
        COUNT(rj.id) AS joinCount
        FROM room r
        LEFT JOIN room_join rj ON r.id = rj.room_id
        WHERE r.status = '모집중'
        GROUP BY r.id, r.store_id, r.room_name, r.room_address, r.max_people
    </select>

    <select id="RoomsbyId" resultType="RoomDto">
        SELECT
        r.id, r.store_id, r.room_name, r.room_address, r.max_people, r.status,
        COUNT(rj.id) AS joinCount
        FROM room r
        LEFT JOIN room_join rj ON r.id = rj.room_id
        WHERE REGEXP_LIKE(r.users, '"userId"\s*:\s*' || #{id,jdbcType=VARCHAR})
        GROUP BY r.id, r.store_id, r.room_name, r.room_address, r.max_people, r.status
    </select>

    <select id="TotalCount" resultType="int">
        SELECT count(*) AS totalCount FROM room
    </select>

    <select id="JoinIngCount" resultType="int">
        SELECT count(*) AS joinIngCount FROM room WHERE status='모집중'
    </select>

    <select id="IngCount" resultType="int">
        SELECT COUNT(*) as ingCount FROM room WHERE status IN ('진행중', '조리중', '배송중', '픽업대기중')
    </select>

    <select id="EndCount" resultType="int">
        SELECT count(*) as endCount FROM room WHERE status IN ('삭제', '종료')
    </select>

    <select id="AllRoomSelect" resultType="RoomDto">
        SELECT
        r.id, r.store_id, r.room_name, r.room_address, r.max_people, r.status, r.created_at, r.room_address_detail,
        NVL(COUNT(rj.id), 0) AS joinCount
        FROM room r
        LEFT JOIN room_join rj ON r.id = rj.room_id AND rj.status = '참여중'
        WHERE r.status IN ('모집중', '배달중', '주문진행중', '진행중')
        GROUP BY r.id, r.store_id, r.room_name, r.room_address, r.max_people, r.status, r.created_at, r.room_address_detail
        ORDER BY r.created_at DESC
    </select>


    <!-- 단일 방 조회 -->
    <select id="SelectByIdRoom" parameterType="int" resultType="com.example.start01.dto.RoomDto">
            SELECT * FROM room WHERE id=#{id}
    </select>


    <select id="SelectByKeyword" parameterType="String" resultType="RoomDto">
        SELECT * FROM room WHERE room_name LIKE '%' || #{keyword} || '%'
    </select>

    <insert id="RoomInsert" parameterType="com.example.start01.dto.RoomDto" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO room (
        store_id,
        room_name,
        room_address,
        room_address_detail,
        max_people,
        users,
        leader_id,
        status,
        created_at
        ) VALUES (
        #{storeId},
        #{roomName},
        #{roomAddress},
        #{roomAddressDetail},
        #{maxPeople},
        #{users},
        #{leaderId},
        #{status},
        SYSDATE
        )
    </insert>

    <select id="selectRoom" parameterType="com.example.start01.dto.RoomDto" resultType="RoomDto">
        SELECT id, store_id, room_name, room_address, room_address_detail, created_at FROM room
        <where>
            <if test="id != null">AND id = #{id}</if>
            <if test="storeId != null">AND store_id = #{storeId}</if>
            <if test="roomName != null">AND room_name = #{roomName}</if>
            <if test="roomNameLike != null">AND room_name LIKE CONCAT('%', #{roomNameLike}, '%')</if>
            <if test="roomAddress != null">AND room_address = #{roomAddress}</if>
            <if test="roomAddressDetail != null">AND room_address_detail = #{roomAddressDetail}</if>
            <if test="maxPeople != null">AND max_people = #{maxPeople}</if>
            <if test="leaderId != null">AND leader_id = #{leaderId}</if>
            <if test="status != null">AND status = #{status}</if>
        </where>
    </select>

    <select id="selectAllRoom" parameterType="com.example.start01.dto.RoomDto" resultType="RoomDto">
        SELECT * FROM room WHERE id = #{id}
    </select>

    <select id="selectReadyPeople" parameterType="map" resultType="Integer">
        SELECT ready_people FROM room WHERE id = #{roomId}
    </select>

    <update id="updateRoomUsers" parameterType="com.example.start01.dto.RoomDto">
        UPDATE room
        SET users = #{users, jdbcType=VARCHAR}
        WHERE id = #{id}
    </update>

    <update id="updateKickId" parameterType="com.example.start01.dto.RoomDto">
        UPDATE room
        SET users = #{users, jdbcType=VARCHAR},  kick_id = #{kickId}
        WHERE id = #{id}
    </update>

    <update id="updateReadyCount" parameterType="map">
        UPDATE room
        SET ready_people = ready_people + #{delta}
        WHERE id = #{roomId}
    </update>
    <select id="AdminSelectRoom" resultType="RoomDto">
        SELECT r.*, s.store_name as storeName
        FROM room r Join store s ON r.store_id = s.id order by r.created_at desc
    </select>
    <select id="selectUsersByRoomId" parameterType="int" resultMap="UsersWithJoinResultMap">
        SELECT u.id AS user_id, u.nickname, rj.id AS room_join_id, rj.status AS join_status
        FROM room_join rj
        JOIN users u ON rj.users_id = u.id
        WHERE rj.room_id = #{roomId}
    </select>

    <resultMap id="UsersWithJoinResultMap" type="UsersDto">
        <id property="id" column="user_id"/>
        <result property="nickname" column="nickname"/>
        <result property="joinStatus" column="join_status"/>
        <result property="roomJoinId" column="room_join_id"/>
    </resultMap>

    <select id="ownerDeliverySelect" resultType="RoomOrdersDto">
        SELECT orders.room_id, store.owner_id, orders.order_id, orders.room_order,
        room.room_address, room.room_address_detail, room.status
        FROM room, orders, store
        WHERE orders.room_id = room.id
        AND store.id = orders.store_id
        AND owner_id = #{ownerId}
        ORDER BY orders.created_at desc
    </select>
    <update id="ownerDeliveryUpdate" parameterType="RoomOrdersDto">
        UPDATE room
        SET status = #{status}
        WHERE id = #{roomId}
    </update>

    <update id="updateRoomStatus" parameterType="map">
        UPDATE room SET status = #{status} WHERE id = #{roomId}
    </update>
    <delete id="blowUpRoom" parameterType="int">
        DELETE FROM room WHERE id = #{roomId}
    </delete>


</mapper>
